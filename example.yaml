#######################################################################################################################################
#This is an example of the ESPHome yaml file needed to work with Home Assistant. Make sure you use your own network and HA credentials.
########################################################################################################################################
esphome:
  name: toshiba-ac
  friendly_name: toshiba_AC

esp8266:
  board: esp12e




# Enable logging
logger:
  baud_rate: 0  #disable hardware UART log, necessary to use the pins for UART communication with the AC unit 
  level: DEBUG

# Enable Home Assistant API
api:
  encryption:
    key: "your_encryption_key"

ota:
  password: "your_ota_password"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ap_timeout: 180s
    ssid: "Toshiba-Ac"
    password: "your_ap_password"

captive_portal:

i2c:
  sda: GPIO2
  scl: GPIO14
  scan: True

external_components:
  - source:
      type: git
      url: https://github.com/makusets/esphome-toshiba-ab

uart:
  tx_pin: GPIO15
  rx_pin: GPIO13
  baud_rate: 2400
  parity: EVEN

climate:
  - platform: toshiba_ab
    name: "Toshiba AC"
    id: toshiba_ac
    connected:
      name: "Toshiba AC Connected"
    master: 0x01  # Master ID in Toshiba protocol, optional, default is 0x00, needs to be set to 0x01 other devices

sensor:
  - platform: bme280_i2c
    temperature:
      name: "Indoor Temperature"
      id: bme_temp
      oversampling: 1x
    pressure:
      name: "Indoor Pressure"
      id: bme_pressure
      accuracy_decimals: 0
      oversampling: 1x
    humidity:
      name: "Indoor Humidity"
      id: bme_humidity
      accuracy_decimals: 0
      oversampling: 2x
    address: 0x76
    update_interval: 30s

    

